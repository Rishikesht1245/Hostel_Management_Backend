name: Deploy Node.js App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    env:
      RAZORPAY_KEY_ID: ${{ secrets.RAZORPAY_KEY_ID }}
      MONGODB_URL: ${{ secrets.MONGODB_URL }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      TRANSPORTER_USERNAME: ${{ secrets.TRANSPORTER_USERNAME }}
      TRANSPORTER_PASSWORD: ${{ secrets.TRANSPORTER_PASSWORD }}
      RAZORPAY_API_SECRET: ${{ secrets.RAZORPAY_API_SECRET }}
      RAZORPAY_API_ID: ${{ secrets.RAZORPAY_API_ID }}
      PORT: ${{ secrets.PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      FRONT_END_URL: ${{ secrets.FRONT_END_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build Docker image
        run: sudo docker build -t hostel-backend-node-image .

      - name: Stop previous container (if exists)
        run: sudo docker stop hostel-backend-node-container || true

      - name: Remove previous container (if exists)
        run: sudo docker rm hostel-backend-node-container || true

      - name: Run Docker container with env
        run: |
          sudo docker run -d --name hostel-backend-node-container -p 80:80 \
          -e RAZORPAY_KEY_ID=$RAZORPAY_KEY_ID \
          -e MONGODB_URL=$MONGODB_URL \
          -e CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY \
          -e CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET \
          -e CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME \
          -e TRANSPORTER_USERNAME=$TRANSPORTER_USERNAME \
          -e TRANSPORTER_PASSWORD="$TRANSPORTER_PASSWORD" \
          -e RAZORPAY_API_SECRET=$RAZORPAY_API_SECRET \
          -e RAZORPAY_API_ID=$RAZORPAY_API_ID \
          -e PORT=$PORT \
          -e JWT_SECRET="$JWT_SECRET" \
          -e FRONT_END_URL=$FRONT_END_URL \
          hostel-backend-node-image
